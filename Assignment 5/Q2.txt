// Number of Occurrence and deleting

#include <iostream>
using namespace std;

struct node{
    int data;
    node* next;
}*head=NULL;

void insertAtEnd(int val){
    node* p=new node;
    p->data=val;
    p->next=NULL;
    if(head==NULL){
        head=p;
    }else{
        node* temp=head;
        while(temp->next!=NULL){
            temp=temp->next;
        }
        temp->next=p;
    }
}

int countOccurrences(int key){
    int count=0;
    node* temp=head;
    while(temp!=NULL){
        if(temp->data==key){
            count++;
        }
        temp=temp->next;
    }
    return count;
}

void deleteOccurrences(int key){
    while(head!=NULL && head->data==key){
        node* temp=head;
        head=head->next;
        delete temp;
    }
    node* current=head;
    while(current!=NULL && current->next!=NULL){
        if(current->next->data==key){
            node* temp=current->next;
            current->next=current->next->next;
            delete temp;
        }else{
            current=current->next;
        }
    }
}

void display(){
    if(head==NULL){
        cout<<"List is empty"<<endl;
    }else{
        cout<<"List:";
        node* temp=head;
        while(temp!=NULL){
            cout<<temp->data<<"->";
            temp=temp->next;
        }
        cout<<"NULL";
        cout<<endl;
    }
}

int main(){
    int n,val,key;
    cout<<"Enter number of elements:";
    cin>>n;
    cout<<"Enter elements of Linked list:"<<endl;
    for(int i=0;i<n;i++){
        cin>>val;
        insertAtEnd(val);
    }
    cout<<"Enter key to search and delete:";
    cin>>key;

    cout<<"Original list: ";
    display();

    int cnt=countOccurrences(key);
    cout<<"Occurrences of "<<key<<": "<<cnt<<endl;

    deleteOccurrences(key);

    cout<<"List after deletion: ";
    display();

    return 0;
}
