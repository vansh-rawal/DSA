// Reversing a Linked List

#include <iostream>
using namespace std;

struct node{
    int data;
    node* next;
}*head=NULL;

void insertAtEnd(int val){
    node* newNode=new node;
    newNode->data=val;
    newNode->next=NULL;
    if(head==NULL){
        head=newNode;
    }else{
        node* temp=head;
        while(temp->next!=NULL){
            temp=temp->next;
        }
        temp->next=newNode;
    }
}

void display(){
    if(head==NULL){
        cout<<"List is empty"<<endl;
    }else{
        cout<<"List:";
        node* temp=head;
        while(temp!=NULL){
            cout<<temp->data<<"->";
            temp=temp->next;
        }
        cout<<"NULL";
        cout<<endl;
    }
}

void reverseList(){
    node* p=NULL;
    node* q=head;
    node* r=NULL;
    while(q!=NULL){
        r=q->next;
        q->next=p;
        p=q;
        q=r;
    }
    head=p;
    cout<<"List reversed"<<endl;
}

int main(){
    int n,val;
    cout<<"Enter number of elements:";
    cin>>n;
    cout<<"Enter elements:"<<endl;
    for(int i=0;i<n;i++){
        cin>>val;
        insertAtEnd(val);
    }

    cout<<"Original List: ";
    display();

    reverseList();

    cout<<"Reversed List: ";
    display();

    return 0;
}
