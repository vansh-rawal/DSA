// Q3 CHECKING PARANTHESIS BALANCE

#include <iostream>
#include <string.h>
using namespace std;

#define size 10
char stack[size];
int top=-1;

void push(char c){
    if (top==size-1) {
        cout<<"Overflow"<<endl;
    } 
    else{
        top++;
        stack[top]=c;
    }
}

char pop() {
    if(top==-1){
        return '\0';
    } 
    else{
        char a=stack[top];
        top--;
        return a;
    }
}

bool same(char open, char close) {
    if (open=='(' && close==')'){
        return true;
    } 
    else if (open=='{' && close=='}'){
        return true;
    } 
    else if(open=='[' && close==']'){
        return true;
    } 
    return false;
}

int main() {
    char exp[size];
    cout<<"Enter expression:";
    cin>>exp;

    int n=strlen(exp);
    for(int i= 0;i<n;i++) {
        if (exp[i]=='(' || exp[i]=='{' || exp[i]=='[') {
            push(exp[i]);
        } 
        else if(exp[i]==')' || exp[i]=='}' || exp[i]==']') {
            char ch= pop();
            if (!same(ch,exp[i])) {
                cout<<"Not Balanced"<<endl;
                return 0;
            }
        }
    }

    if(top==-1){
        cout<<"Balanced"<<endl;
    }
    else{
        cout<<"Not Balanced"<<endl;
    }
    
    return 0;
}
